(use Int)

(defn intify [c]
  (- (Char.to-int @c) 48))

(defn zero-to-nine [i]
  (and (< @i 10) (> @i -1)))

(defn get-ints [s]
  (Array.filter zero-to-nine (Array.copy-map intify &(String.chars &s))))

(defn solve [inpt]
  (let [sum 0 size (Array.count inpt)]
    (do
      (for [i 0 size]
        (if (= @(Array.nth inpt i) @(Array.nth inpt (mod (+ i (/ size 2)) size)))
          (set! &sum (+ sum @(Array.nth inpt i)))
          ()))
      sum)))

(defn main []
  (let [inpt (get-ints (IO.read-file "day1"))]
  (do
    (IO.println &(str (solve &inpt))))))
